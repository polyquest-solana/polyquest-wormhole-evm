{
  "address": "biKoNwBzPVkGnQoT18NPaA2V3iUxtyxr4Y1o87gkJfJ",
  "metadata": {
    "name": "forecast_market",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "add_answer_keys",
      "discriminator": [
        89,
        115,
        155,
        223,
        0,
        19,
        17,
        59
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true
        },
        {
          "name": "market_account",
          "writable": true
        },
        {
          "name": "answer_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  110,
                  115,
                  119,
                  101,
                  114
                ]
              },
              {
                "kind": "account",
                "path": "market_account.market_key",
                "account": "MarketAccount"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "anwser_keys",
          "type": {
            "vec": "u64"
          }
        }
      ]
    },
    {
      "name": "add_foreign_emitter",
      "discriminator": [
        205,
        114,
        116,
        141,
        182,
        104,
        230,
        9
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true
        },
        {
          "name": "emitter_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  102,
                  111,
                  114,
                  101,
                  105,
                  103,
                  110,
                  95,
                  101,
                  109,
                  105,
                  116,
                  116,
                  101,
                  114
                ]
              },
              {
                "kind": "arg",
                "path": "chain"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "chain",
          "type": "u16"
        },
        {
          "name": "address",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "adjourn_market",
      "discriminator": [
        122,
        223,
        248,
        29,
        26,
        4,
        248,
        39
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true
        },
        {
          "name": "market_account",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "approve_market",
      "discriminator": [
        195,
        83,
        73,
        224,
        150,
        237,
        150,
        5
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true
        },
        {
          "name": "market_account",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "bet",
      "discriminator": [
        94,
        203,
        166,
        126,
        20,
        243,
        169,
        82
      ],
      "accounts": [
        {
          "name": "voter",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true
        },
        {
          "name": "bet_mint",
          "writable": true
        },
        {
          "name": "user_token_account",
          "writable": true
        },
        {
          "name": "vault_token_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "market_account"
              },
              {
                "kind": "const",
                "value": [
                  6,
                  221,
                  246,
                  225,
                  215,
                  101,
                  161,
                  147,
                  217,
                  203,
                  225,
                  70,
                  206,
                  235,
                  121,
                  172,
                  28,
                  180,
                  133,
                  237,
                  95,
                  91,
                  55,
                  145,
                  58,
                  140,
                  245,
                  133,
                  126,
                  255,
                  0,
                  169
                ]
              },
              {
                "kind": "account",
                "path": "bet_mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "market_account",
          "writable": true
        },
        {
          "name": "answer_account",
          "writable": true
        },
        {
          "name": "bet_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  98,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103
                ]
              },
              {
                "kind": "account",
                "path": "voter"
              },
              {
                "kind": "account",
                "path": "market_account.market_key",
                "account": "MarketAccount"
              },
              {
                "kind": "arg",
                "path": "answer_key"
              }
            ]
          }
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "anwser_key",
          "type": "u64"
        },
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "bet_cross_chain",
      "discriminator": [
        231,
        36,
        13,
        188,
        199,
        93,
        185,
        84
      ],
      "accounts": [
        {
          "name": "polyquest_owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true
        },
        {
          "name": "market_account",
          "writable": true
        },
        {
          "name": "answer_account",
          "writable": true
        },
        {
          "name": "wormhole_program",
          "address": "3u8hJUVTA4jH1wYAyUur7FFZVQ8H635K3tSHHF4ssjQ5"
        },
        {
          "name": "posted",
          "docs": [
            "Verified Wormhole message account. The Wormhole program verified",
            "signatures and posted the account data here. Read-only."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  80,
                  111,
                  115,
                  116,
                  101,
                  100,
                  86,
                  65,
                  65
                ]
              },
              {
                "kind": "arg",
                "path": "_vaa_hash"
              }
            ]
          }
        },
        {
          "name": "bet_cross_chain_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  98,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  95,
                  99,
                  114,
                  111,
                  115,
                  115,
                  95,
                  99,
                  104,
                  97,
                  105,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "posted"
              },
              {
                "kind": "arg",
                "path": "_voter_address"
              }
            ]
          }
        },
        {
          "name": "foreign_emitter",
          "docs": [
            "Foreign emitter account. The posted message's `emitter_address` must",
            "agree with the one we have registered for this message's `emitter_chain`",
            "(chain ID). Read-only."
          ]
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "vaa_hash",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "voter",
          "type": {
            "array": [
              "u8",
              20
            ]
          }
        }
      ]
    },
    {
      "name": "claim_cross_chain",
      "discriminator": [
        216,
        51,
        166,
        225,
        222,
        46,
        13,
        163
      ],
      "accounts": [
        {
          "name": "polyquest_owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "config",
          "docs": [
            "Sender Config account. Acts as the signer for the Token Bridge token",
            "transfer. Read-only."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  110,
                  100,
                  101,
                  114
                ]
              }
            ]
          }
        },
        {
          "name": "config_account",
          "writable": true
        },
        {
          "name": "bet_mint",
          "writable": true
        },
        {
          "name": "reward_mint",
          "writable": true
        },
        {
          "name": "vault_bet_token_account",
          "writable": true
        },
        {
          "name": "vault_reward_token_account",
          "writable": true
        },
        {
          "name": "tmp_token_account",
          "docs": [
            "Program's temporary token account. This account is created before the",
            "instruction is invoked to temporarily take custody of the payer's",
            "tokens. When the tokens are finally bridged out, the token account",
            "will have zero balance and can be closed."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  116,
                  109,
                  112
                ]
              },
              {
                "kind": "account",
                "path": "bet_mint"
              }
            ]
          }
        },
        {
          "name": "market_account",
          "writable": true
        },
        {
          "name": "bet_account",
          "writable": true
        },
        {
          "name": "answer_account",
          "writable": true
        },
        {
          "name": "foreign_emitter",
          "docs": [
            "Foreign emitter account. The posted message's `emitter_address` must",
            "agree with the one we have registered for this message's `emitter_chain`",
            "(chain ID). Read-only."
          ]
        },
        {
          "name": "token_bridge_program",
          "docs": [
            "Token Bridge program."
          ],
          "address": "DZnkkTmCiFWfYTfT41X3Rd1kDgozqzxWaHqsw6W4x2oe"
        },
        {
          "name": "token_bridge_config",
          "docs": [
            "Token Bridge config. Read-only."
          ]
        },
        {
          "name": "token_bridge_custody",
          "docs": [
            "account that holds this mint's balance. This account needs to be",
            "unchecked because a token account may not have been created for this",
            "mint yet. Mutable."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "bet_mint"
              }
            ]
          }
        },
        {
          "name": "token_bridge_authority_signer"
        },
        {
          "name": "token_bridge_custody_signer"
        },
        {
          "name": "wormhole_bridge",
          "docs": [
            "Wormhole bridge data. Mutable."
          ],
          "writable": true
        },
        {
          "name": "wormhole_message",
          "docs": [
            "tokens transferred in this account for our program. Mutable."
          ],
          "writable": true
        },
        {
          "name": "token_bridge_emitter",
          "writable": true
        },
        {
          "name": "token_bridge_sequence",
          "writable": true
        },
        {
          "name": "wormhole_fee_collector",
          "docs": [
            "Wormhole fee collector. Mutable."
          ],
          "writable": true
        },
        {
          "name": "clock",
          "docs": [
            "Clock sysvar."
          ],
          "address": "SysvarC1ock11111111111111111111111111111111"
        },
        {
          "name": "rent",
          "docs": [
            "Rent sysvar."
          ],
          "address": "SysvarRent111111111111111111111111111111111"
        },
        {
          "name": "wormhole_program",
          "docs": [
            "Wormhole program."
          ],
          "address": "3u8hJUVTA4jH1wYAyUur7FFZVQ8H635K3tSHHF4ssjQ5"
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "locked_amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "claim_token",
      "discriminator": [
        116,
        206,
        27,
        191,
        166,
        19,
        0,
        73
      ],
      "accounts": [
        {
          "name": "voter",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true
        },
        {
          "name": "bet_mint",
          "writable": true
        },
        {
          "name": "reward_mint",
          "writable": true
        },
        {
          "name": "user_bet_token_account",
          "writable": true
        },
        {
          "name": "vault_bet_token_account",
          "writable": true
        },
        {
          "name": "user_reward_token_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "voter"
              },
              {
                "kind": "const",
                "value": [
                  6,
                  221,
                  246,
                  225,
                  215,
                  101,
                  161,
                  147,
                  217,
                  203,
                  225,
                  70,
                  206,
                  235,
                  121,
                  172,
                  28,
                  180,
                  133,
                  237,
                  95,
                  91,
                  55,
                  145,
                  58,
                  140,
                  245,
                  133,
                  126,
                  255,
                  0,
                  169
                ]
              },
              {
                "kind": "account",
                "path": "reward_mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "vault_reward_token_account",
          "writable": true
        },
        {
          "name": "market_account",
          "writable": true
        },
        {
          "name": "bet_account",
          "writable": true
        },
        {
          "name": "answer_account",
          "writable": true
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "draft_market",
      "discriminator": [
        251,
        196,
        130,
        72,
        251,
        64,
        188,
        39
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "bet_mint",
          "writable": true
        },
        {
          "name": "config_account",
          "writable": true
        },
        {
          "name": "market_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  97,
                  114,
                  107,
                  101,
                  116
                ]
              },
              {
                "kind": "arg",
                "path": "market_key"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "market_key",
          "type": "u64"
        },
        {
          "name": "creator",
          "type": "pubkey"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "create_fee",
          "type": "u64"
        },
        {
          "name": "creator_fee_percentage",
          "type": "u64"
        },
        {
          "name": "cojam_fee_percentage",
          "type": "u64"
        }
      ]
    },
    {
      "name": "finish_market",
      "discriminator": [
        200,
        216,
        58,
        2,
        224,
        204,
        151,
        26
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true
        },
        {
          "name": "market_account",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "initialize",
      "discriminator": [
        175,
        175,
        109,
        31,
        13,
        152,
        155,
        237
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "reward_mint",
          "type": "pubkey"
        },
        {
          "name": "reward_apr",
          "type": "u64"
        }
      ]
    },
    {
      "name": "initialize_bridge",
      "discriminator": [
        6,
        173,
        152,
        229,
        35,
        112,
        127,
        151
      ],
      "accounts": [
        {
          "name": "owner",
          "docs": [
            "Whoever initializes the config will be the owner of the program. Signer",
            "for creating the [`SenderConfig`] and [`RedeemerConfig`] accounts."
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "sender_config",
          "docs": [
            "Sender Config account, which saves program data useful for other",
            "instructions, specifically for outbound transfers. Also saves the payer",
            "of the [`initialize`](crate::initialize) instruction as the program's",
            "owner."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  110,
                  100,
                  101,
                  114
                ]
              }
            ]
          }
        },
        {
          "name": "wormhole_program",
          "docs": [
            "Wormhole program."
          ],
          "address": "3u8hJUVTA4jH1wYAyUur7FFZVQ8H635K3tSHHF4ssjQ5"
        },
        {
          "name": "token_bridge_program",
          "docs": [
            "Token Bridge program."
          ],
          "address": "DZnkkTmCiFWfYTfT41X3Rd1kDgozqzxWaHqsw6W4x2oe"
        },
        {
          "name": "token_bridge_config",
          "docs": [
            "Token Bridge config. Token Bridge program needs this account to",
            "invoke the Wormhole program to post messages. Even though it is a",
            "required account for redeeming token transfers, it is not actually",
            "used for completing these transfers."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        },
        {
          "name": "token_bridge_authority_signer",
          "docs": [
            "data; it is purely just a signer for SPL tranfers when it is delegated",
            "spending approval for the SPL token."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121,
                  95,
                  115,
                  105,
                  103,
                  110,
                  101,
                  114
                ]
              }
            ]
          }
        },
        {
          "name": "token_bridge_custody_signer",
          "docs": [
            "data; it is purely just a signer for Token Bridge SPL tranfers."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  99,
                  117,
                  115,
                  116,
                  111,
                  100,
                  121,
                  95,
                  115,
                  105,
                  103,
                  110,
                  101,
                  114
                ]
              }
            ]
          }
        },
        {
          "name": "token_bridge_mint_authority",
          "docs": [
            "data; it is purely just a signer (SPL mint authority) for Token Bridge",
            "wrapped assets."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  105,
                  110,
                  116,
                  95,
                  115,
                  105,
                  103,
                  110,
                  101,
                  114
                ]
              }
            ]
          }
        },
        {
          "name": "wormhole_bridge",
          "docs": [
            "Wormhole bridge data account (a.k.a. its config)."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  66,
                  114,
                  105,
                  100,
                  103,
                  101
                ]
              }
            ]
          }
        },
        {
          "name": "token_bridge_emitter",
          "docs": [
            "that holds data; it is purely just a signer for posting Wormhole",
            "messages on behalf of the Token Bridge program."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  109,
                  105,
                  116,
                  116,
                  101,
                  114
                ]
              }
            ]
          }
        },
        {
          "name": "wormhole_fee_collector",
          "docs": [
            "Wormhole fee collector account, which requires lamports before the",
            "program can post a message (if there is a fee). Token Bridge program",
            "handles the fee payments."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  102,
                  101,
                  101,
                  95,
                  99,
                  111,
                  108,
                  108,
                  101,
                  99,
                  116,
                  111,
                  114
                ]
              }
            ]
          }
        },
        {
          "name": "token_bridge_sequence",
          "docs": [
            "Token Bridge emitter's sequence account. Like with all Wormhole",
            "emitters, this account keeps track of the sequence number of the last",
            "posted message."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  83,
                  101,
                  113,
                  117,
                  101,
                  110,
                  99,
                  101
                ]
              },
              {
                "kind": "account",
                "path": "token_bridge_emitter"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "docs": [
            "System program."
          ],
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "relayer_fee",
          "type": "u32"
        },
        {
          "name": "relayer_fee_precision",
          "type": "u32"
        }
      ]
    },
    {
      "name": "retrieve_tokens",
      "discriminator": [
        208,
        194,
        68,
        55,
        183,
        22,
        93,
        135
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true
        },
        {
          "name": "vault_token_account",
          "writable": true
        },
        {
          "name": "remains_token_account",
          "writable": true
        },
        {
          "name": "bet_mint",
          "writable": true
        },
        {
          "name": "market_account",
          "writable": true
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        },
        {
          "name": "associate_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "set_account",
      "discriminator": [
        100,
        58,
        16,
        200,
        83,
        84,
        162,
        203
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "service_fee_account",
          "type": {
            "option": "pubkey"
          }
        },
        {
          "name": "remain_account",
          "type": {
            "option": "pubkey"
          }
        }
      ]
    },
    {
      "name": "success_market",
      "discriminator": [
        252,
        13,
        1,
        40,
        160,
        91,
        131,
        212
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true
        },
        {
          "name": "bet_mint",
          "writable": true
        },
        {
          "name": "creator_token_account",
          "writable": true
        },
        {
          "name": "service_token_account",
          "writable": true
        },
        {
          "name": "market_account",
          "writable": true
        },
        {
          "name": "vault_token_account",
          "writable": true
        },
        {
          "name": "answer_account",
          "writable": true
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "answer_key",
          "type": "u64"
        }
      ]
    },
    {
      "name": "update_owner",
      "discriminator": [
        164,
        188,
        124,
        254,
        132,
        26,
        198,
        178
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_owner",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "update_reward_config",
      "discriminator": [
        35,
        111,
        215,
        56,
        135,
        228,
        232,
        50
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "config_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "reward_mint",
          "type": {
            "option": "pubkey"
          }
        },
        {
          "name": "reward_apr",
          "type": {
            "option": "u64"
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "AnswerAccount",
      "discriminator": [
        75,
        175,
        139,
        96,
        119,
        135,
        123,
        71
      ]
    },
    {
      "name": "BettingAccount",
      "discriminator": [
        128,
        101,
        147,
        11,
        71,
        96,
        22,
        160
      ]
    },
    {
      "name": "BettingCrossChainAccount",
      "discriminator": [
        5,
        98,
        80,
        234,
        52,
        75,
        10,
        217
      ]
    },
    {
      "name": "ConfigAccount",
      "discriminator": [
        189,
        255,
        97,
        70,
        186,
        189,
        24,
        102
      ]
    },
    {
      "name": "ForeignEmitter",
      "discriminator": [
        209,
        139,
        241,
        247,
        96,
        178,
        159,
        2
      ]
    },
    {
      "name": "MarketAccount",
      "discriminator": [
        201,
        78,
        187,
        225,
        240,
        198,
        201,
        251
      ]
    },
    {
      "name": "SenderConfig",
      "discriminator": [
        0,
        241,
        220,
        77,
        167,
        128,
        79,
        152
      ]
    }
  ],
  "events": [
    {
      "name": "AnswerAdded",
      "discriminator": [
        82,
        95,
        97,
        36,
        223,
        127,
        175,
        26
      ]
    },
    {
      "name": "BetCrossChainPlaced",
      "discriminator": [
        63,
        38,
        211,
        31,
        161,
        93,
        181,
        48
      ]
    },
    {
      "name": "BetPlaced",
      "discriminator": [
        88,
        88,
        145,
        226,
        126,
        206,
        32,
        0
      ]
    },
    {
      "name": "ForeignEmitterAdded",
      "discriminator": [
        19,
        26,
        216,
        213,
        59,
        60,
        91,
        87
      ]
    },
    {
      "name": "MarketAdjourned",
      "discriminator": [
        255,
        9,
        83,
        139,
        244,
        130,
        217,
        61
      ]
    },
    {
      "name": "MarketApproved",
      "discriminator": [
        213,
        222,
        68,
        97,
        16,
        1,
        31,
        38
      ]
    },
    {
      "name": "MarketDrafted",
      "discriminator": [
        165,
        166,
        240,
        170,
        76,
        56,
        133,
        177
      ]
    },
    {
      "name": "MarketFinished",
      "discriminator": [
        55,
        252,
        141,
        64,
        190,
        178,
        104,
        34
      ]
    },
    {
      "name": "MarketSuccess",
      "discriminator": [
        28,
        146,
        105,
        87,
        226,
        249,
        99,
        105
      ]
    },
    {
      "name": "RewardClaimed",
      "discriminator": [
        49,
        28,
        87,
        84,
        158,
        48,
        229,
        175
      ]
    },
    {
      "name": "TokenClaimed",
      "discriminator": [
        49,
        144,
        233,
        63,
        84,
        154,
        232,
        26
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "AlreadyInitialized",
      "msg": "The configuration account is already initialized."
    },
    {
      "code": 6001,
      "name": "Unauthorized",
      "msg": "You are not authorized to perform this action."
    },
    {
      "code": 6002,
      "name": "MathOperationError",
      "msg": "Operation resulted in an error."
    },
    {
      "code": 6003,
      "name": "MarketNotFinished",
      "msg": "Market/AdjournMarket: Market is not finished"
    },
    {
      "code": 6004,
      "name": "MarketDoesExist",
      "msg": "Market/DraftMarket: Market key does exist"
    },
    {
      "code": 6005,
      "name": "MarketNotApproved",
      "msg": "Market/Bet: Market is not approved"
    },
    {
      "code": 6006,
      "name": "MaxAnswersReached",
      "msg": "The maximum number of answers has been reached."
    },
    {
      "code": 6007,
      "name": "AnswerAlreadyExists",
      "msg": "The answer key already exists."
    },
    {
      "code": 6008,
      "name": "AnswerNotExists",
      "msg": "The answer key does not exist."
    },
    {
      "code": 6009,
      "name": "MarketDoesNotContainAnswerKey",
      "msg": "Market/SuccessMarket: Market does not contain answerKey"
    },
    {
      "code": 6010,
      "name": "CannotClaimToken",
      "msg": "Market/Receive: Cannot receive token"
    },
    {
      "code": 6011,
      "name": "CannotRetrieveToken",
      "msg": "Market/Retrieve: Cannot Retrieve not finished market"
    },
    {
      "code": 6012,
      "name": "CannotRetrieveBeforeDate",
      "msg": "Market/Retrieve: Cannot Retrieve before 180 days"
    },
    {
      "code": 6013,
      "name": "AnswerKeyNotRight",
      "msg": "Market/Receive: Answer key is not succeeded answer key"
    },
    {
      "code": 6014,
      "name": "InvalidBetMint",
      "msg": "Market/Bet: Invalid bet mint"
    },
    {
      "code": 6015,
      "name": "InvalidTimeRange",
      "msg": "Market/ClaimToken: Invalid time range"
    },
    {
      "code": 6016,
      "name": "InvalidAnswerKey",
      "msg": "Market/ClaimToken: Invalid answer key"
    },
    {
      "code": 6017,
      "name": "Overflow",
      "msg": "Operation Error: Overflow"
    },
    {
      "code": 6018,
      "name": "InvalidRewardMint",
      "msg": "Invalid reward mint"
    },
    {
      "code": 6019,
      "name": "InvalidForeignEmitter",
      "msg": "Invalid foreign emitter"
    },
    {
      "code": 6020,
      "name": "InvalidMessage",
      "msg": "Invalid message"
    },
    {
      "code": 6021,
      "name": "InvalidRecipient",
      "msg": "Invalid recipient"
    },
    {
      "code": 6022,
      "name": "InvalidRelayerFee",
      "msg": "Invalid relayer fee"
    },
    {
      "code": 6023,
      "name": "InvalidTokenBridgeCustodySigner",
      "msg": "Invalid token bridge custody signer"
    },
    {
      "code": 6024,
      "name": "InvalidTokenBridgeAuthoritySigner",
      "msg": "Invalid token bridge authority signer"
    },
    {
      "code": 6025,
      "name": "InvalidTokenBridgeConfig",
      "msg": "Invalid token bridge config"
    },
    {
      "code": 6026,
      "name": "InvalidTokenBridgeEmitter",
      "msg": "Invalid token bridge emitter"
    },
    {
      "code": 6027,
      "name": "InvalidTokenBridgeSequence",
      "msg": "Invalid token bridge sequence"
    },
    {
      "code": 6028,
      "name": "InvalidWormholeBridge",
      "msg": "Invalid token bridge wormhole bridge"
    },
    {
      "code": 6029,
      "name": "InvalidWormholeFeeCollector",
      "msg": "Invalid token bridge wormhole fee collector"
    }
  ],
  "types": [
    {
      "name": "Answer",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "answer_key",
            "type": "u64"
          },
          {
            "name": "answer_total_tokens",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "AnswerAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "answers",
            "type": {
              "vec": {
                "defined": {
                  "name": "Answer"
                }
              }
            }
          },
          {
            "name": "exist",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "AnswerAdded",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market_key",
            "type": "u64"
          },
          {
            "name": "new_answers",
            "type": {
              "vec": "u64"
            }
          }
        ]
      }
    },
    {
      "name": "BetCrossChainPlaced",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "voter_wallet_address",
            "type": "string"
          },
          {
            "name": "chain_id",
            "type": "u16"
          },
          {
            "name": "market_key",
            "type": "u64"
          },
          {
            "name": "answer_key",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "BetPlaced",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "voter",
            "type": "pubkey"
          },
          {
            "name": "market_key",
            "type": "pubkey"
          },
          {
            "name": "answer_key",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "BettingAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "market_key",
            "type": "u64"
          },
          {
            "name": "answer_key",
            "type": "u64"
          },
          {
            "name": "voter",
            "type": "pubkey"
          },
          {
            "name": "tokens",
            "type": "u64"
          },
          {
            "name": "create_time",
            "type": "u64"
          },
          {
            "name": "exist",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "BettingCrossChainAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "market_key",
            "type": "u64"
          },
          {
            "name": "answer_key",
            "type": "u64"
          },
          {
            "name": "create_time",
            "type": "u64"
          },
          {
            "name": "exist",
            "type": "bool"
          },
          {
            "name": "chain_id",
            "type": "u16"
          },
          {
            "name": "voter_wallet_address",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "token_address",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "tokens",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "ConfigAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "is_initialized",
            "type": "bool"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "reward_mint",
            "type": "pubkey"
          },
          {
            "name": "reward_apr",
            "type": "u64"
          },
          {
            "name": "service_fee_account",
            "type": "pubkey"
          },
          {
            "name": "remain_account",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "ForeignEmitter",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "chain",
            "docs": [
              "Emitter chain. Cannot equal `1` (Solana's Chain ID)."
            ],
            "type": "u16"
          },
          {
            "name": "address",
            "docs": [
              "Emitter address. Cannot be zero address."
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "ForeignEmitterAdded",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "chain",
            "type": "u16"
          },
          {
            "name": "address",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    },
    {
      "name": "MarketAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "exist",
            "type": "bool"
          },
          {
            "name": "creator",
            "type": "pubkey"
          },
          {
            "name": "bet_mint",
            "type": "pubkey"
          },
          {
            "name": "market_key",
            "type": "u64"
          },
          {
            "name": "title",
            "type": "string"
          },
          {
            "name": "status",
            "type": {
              "defined": {
                "name": "MarketStatus"
              }
            }
          },
          {
            "name": "creator_fee",
            "type": "u64"
          },
          {
            "name": "creator_fee_percentage",
            "type": "u64"
          },
          {
            "name": "service_fee_percentage",
            "type": "u64"
          },
          {
            "name": "approve_time",
            "type": "u64"
          },
          {
            "name": "finish_time",
            "type": "u64"
          },
          {
            "name": "adjourn_time",
            "type": "u64"
          },
          {
            "name": "success_time",
            "type": "u64"
          },
          {
            "name": "market_total_tokens",
            "type": "u64"
          },
          {
            "name": "market_remain_tokens",
            "type": "u64"
          },
          {
            "name": "correct_answer_key",
            "type": "u64"
          },
          {
            "name": "market_reward_base_tokens",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "MarketAdjourned",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market_key",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "MarketApproved",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market_key",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "MarketDrafted",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "creator",
            "type": "pubkey"
          },
          {
            "name": "title",
            "type": "string"
          },
          {
            "name": "create_fee",
            "type": "u64"
          },
          {
            "name": "creator_fee_percentage",
            "type": "u64"
          },
          {
            "name": "service_fee_percentage",
            "type": "u64"
          },
          {
            "name": "approve_time",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "MarketFinished",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market_key",
            "type": "u64"
          },
          {
            "name": "end_time",
            "type": "u64"
          },
          {
            "name": "remain_tokens",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "MarketStatus",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Draft"
          },
          {
            "name": "Approve"
          },
          {
            "name": "Finished"
          },
          {
            "name": "Success"
          },
          {
            "name": "Adjourn"
          }
        ]
      }
    },
    {
      "name": "MarketSuccess",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market_key",
            "type": "u64"
          },
          {
            "name": "answer_key",
            "type": "u64"
          },
          {
            "name": "creator_fee",
            "type": "u64"
          },
          {
            "name": "service_fee",
            "type": "u64"
          },
          {
            "name": "market_remain_tokens",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "OutboundTokenBridgeAddresses",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "config",
            "type": "pubkey"
          },
          {
            "name": "authority_signer",
            "type": "pubkey"
          },
          {
            "name": "custody_signer",
            "type": "pubkey"
          },
          {
            "name": "emitter",
            "type": "pubkey"
          },
          {
            "name": "sequence",
            "type": "pubkey"
          },
          {
            "name": "wormhole_bridge",
            "docs": [
              "[BridgeData](wormhole_anchor_sdk::wormhole::BridgeData) address."
            ],
            "type": "pubkey"
          },
          {
            "name": "wormhole_fee_collector",
            "docs": [
              "[FeeCollector](wormhole_anchor_sdk::wormhole::FeeCollector) address."
            ],
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "RewardClaimed",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "receiver",
            "type": "pubkey"
          },
          {
            "name": "amount",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "SenderConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "docs": [
              "Program's owner."
            ],
            "type": "pubkey"
          },
          {
            "name": "bump",
            "docs": [
              "PDA bump."
            ],
            "type": "u8"
          },
          {
            "name": "token_bridge",
            "docs": [
              "Token Bridge program's relevant addresses."
            ],
            "type": {
              "defined": {
                "name": "OutboundTokenBridgeAddresses"
              }
            }
          },
          {
            "name": "finality",
            "docs": [
              "AKA consistency level. u8 representation of Solana's",
              "[Finality](wormhole_anchor_sdk::wormhole::Finality)."
            ],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "TokenClaimed",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "receiver",
            "type": "pubkey"
          },
          {
            "name": "market_key",
            "type": "u64"
          },
          {
            "name": "betting_key",
            "type": "u64"
          },
          {
            "name": "received_tokens",
            "type": "u64"
          }
        ]
      }
    }
  ]
}