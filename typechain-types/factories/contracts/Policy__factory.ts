/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Policy, PolicyInterface } from "../../contracts/Policy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "policy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pullPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newPolicy_",
        type: "address",
      },
    ],
    name: "pushPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36102d28061005e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630505c8c9146100515780635beede0814610070578063a15ad0771461007a578063a4b239801461008d575b600080fd5b600054604080516001600160a01b039092168252519081900360200190f35b610078610095565b005b610078610088366004610217565b6100fb565b6100786101b5565b6001546001600160a01b031633146100ac57600080fd5b600154600080546040516001600160a01b03938416939091169160008051602061027d83398151915291a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b6000546001600160a01b0316331461012e5760405162461bcd60e51b815260040161012590610247565b60405180910390fd5b6001600160a01b0381166101935760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610125565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101df5760405162461bcd60e51b815260040161012590610247565b600080546040516001600160a01b039091169060008051602061027d833981519152908390a3600080546001600160a01b0319169055565b60006020828403121561022957600080fd5b81356001600160a01b038116811461024057600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220b79c2954097aebb38dc50c679e634e22f981949dc5f881b8f2e230924c08323664736f6c634300081b0033";

type PolicyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolicyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Policy__factory extends ContractFactory {
  constructor(...args: PolicyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Policy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Policy__factory {
    return super.connect(runner) as Policy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolicyInterface {
    return new Interface(_abi) as PolicyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Policy {
    return new Contract(address, _abi, runner) as unknown as Policy;
  }
}
